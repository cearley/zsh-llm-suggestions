name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install

    - name: Install dependencies
      run: uv sync --dev

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh

    - name: Run unit tests
      env:
        SKIP_INTEGRATION_TESTS: "1"
        ZSH_LLM_DISABLE_PYGMENTS: "1"
      run: |
        uv run pytest tests/test_openai_unit.py -v

    - name: Test uv tool install
      run: |
        uv tool install .
        command -v zsh-llm-openai || exit 1
        command -v zsh-llm-copilot || exit 1
        command -v zsh-llm-install || exit 1
        command -v zsh-llm-uninstall || exit 1
        command -v zsh-llm-status || exit 1
        echo "✅ uv tool install works - all commands available"

    - name: Test git clone method (zsh script sourcing)
      run: |
        # Test that zsh script sources without errors
        zsh -c "source ./zsh-llm-suggestions.zsh && echo 'Script sourced successfully'"

        # Test that functions are defined
        zsh -c "source ./zsh-llm-suggestions.zsh && declare -f zsh_llm_suggestions_openai > /dev/null && echo 'OpenAI function defined'"
        zsh -c "source ./zsh-llm-suggestions.zsh && declare -f zsh_llm_suggestions_github_copilot > /dev/null && echo 'Copilot function defined'"

    - name: Validate test scripts
      run: |
        # Check script syntax
        bash -n test-environment.sh || exit 1
        bash -n run-tests.sh || exit 1
        echo "✅ Test scripts are valid"

  shellcheck:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Run shellcheck on zsh files
      run: |
        # Check zsh script with bash syntax (closest approximation)
        shellcheck -s bash zsh-llm-suggestions.zsh || echo "Shellcheck warnings/errors found (expected for zsh-specific syntax)"
        echo "Shellcheck analysis completed"
